{"version":3,"file":"static/js/770.f6ec3990.chunk.js","mappings":"mOACAA,EAAAA,EAAMC,SAASC,QAAU,8CAEzB,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOb,EAAAA,EAAMc,IAAI,SAAS,KAAD,EAA3B,OAARL,EAAQE,EAAAI,KAAAJ,EAAAK,OAAA,SACPP,EAASQ,MAAI,wBAAAN,EAAAO,OAAA,GAAAV,EAAA,KACrB,kBAHc,OAAAJ,EAAAe,MAAA,KAAAC,UAAA,KAKf,I,kBC+CA,EAhDoB,WAClB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsBT,EAAAA,EAAAA,UAAS,GAAxBU,GAA0BR,EAAAA,EAAAA,GAAAO,EAAA,GAAf,GAClBE,GAAkCX,EAAAA,EAAAA,WAAS,GAAMY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAlC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA+B,EAAA,OAAAjC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEI,OAFJF,EAAAC,KAAA,EAEfwB,GAAa,GAAMzB,EAAAE,KAAA,EACEV,IAAY,KAAD,EAA1BoC,EAAM5B,EAAAI,KACZyB,QAAQC,IAAIF,GACZb,EAAQa,GAAQ5B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA+B,GAAA/B,EAAA,SAEZX,EAAAA,EAAM2C,SAAQhC,EAAA+B,IAChBF,QAAQC,IAAI,iHAAwB9B,EAAA+B,GAAME,SAE1CJ,QAAQK,MAAM,4JAA8BlC,EAAA+B,IAC7C,QAEmB,OAFnB/B,EAAAC,KAAA,GAEDwB,GAAa,GAAOzB,EAAAmC,OAAA,6BAAAnC,EAAAO,OAAA,GAAAV,EAAA,wBAEvB,kBAfe,OAAAJ,EAAAe,MAAA,KAAAC,UAAA,KAiBhBkB,GACF,GAAG,IAEH,IAAMS,EAAiBlB,EAAcG,EAC/BgB,EAAcvB,EAAKwB,MAAM,EAAGF,GAElC,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBACFjB,IAAakB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qBACjBC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAAF,SACNJ,EAAYO,KAAI,SAAAC,GAAG,OAClBH,EAAAA,EAAAA,KAAA,MAAAD,UAAkBC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACD,IAAKA,KAAvBA,EAAIE,GAAgC,MAGhDjC,EAAKkC,OAASZ,IACbM,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAACC,KAAK,SAASC,QAXV,WAAH,OAAShC,GAAe,SAAAiC,GAAQ,OAAIA,EAAW,CAAC,GAAE,EAWbX,SAAC,gBAM5D,C","sources":["services/carsApi.js","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://645a8c7c65bd868e931e4c89.mockapi.io';\n\nconst fetchCars = async () => {\n  const response = await axios.get('/cars');\n  return response.data;\n};\n\nexport default fetchCars;\n","import CarCard from 'components/CarCard/CarCard';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport fetchCars from 'services/carsApi';\nimport { CarsList, LoadMoreBtn } from './CatalogPage.styled';\n\nconst CatalogPage = () => {\n  const [cars, setCars] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [carsPerPage] = useState(8);\n  const [isloading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getAllCars = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchCars();\n        console.log(result);\n        setCars(result);\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.log('Запит було скасовано', error.message);\n        } else {\n          console.error('Помилка при виконанні запиту', error);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getAllCars();\n  }, []);\n\n  const indexOfLastCar = currentPage * carsPerPage;\n  const currentCars = cars.slice(0, indexOfLastCar);\n  const handleLoadMore = () => setCurrentPage(prevPage => prevPage + 1);\n  return (\n    <>\n      <p>Cars catalog</p>\n      {isloading && <p>Loading cars...</p>}\n      <CarsList>\n        {currentCars.map(car => (\n          <li key={car.id}>{<CarCard car={car} />}</li>\n        ))}\n      </CarsList>\n      {cars.length > indexOfLastCar && (\n        <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n          Load more\n        </LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["axios","defaults","baseURL","fetchCars","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","data","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","cars","setCars","_useState3","_useState4","currentPage","setCurrentPage","_useState5","carsPerPage","_useState7","_useState8","isloading","setIsLoading","useEffect","getAllCars","result","console","log","t0","isCancel","message","error","finish","indexOfLastCar","currentCars","slice","_jsxs","_Fragment","children","_jsx","CarsList","map","car","CarCard","id","length","LoadMoreBtn","type","onClick","prevPage"],"sourceRoot":""}