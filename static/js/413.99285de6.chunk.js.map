{"version":3,"file":"static/js/413.99285de6.chunk.js","mappings":"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","sources":["pages/FavoritesPage/FavoritesPage.jsx"],"sourcesContent":["import CarCard from 'components/CarCard/CarCard';\nimport { useSelector } from 'react-redux';\nimport { CarsList } from 'pages/CatalogPage/CatalogPage.styled';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { useState, useCallback, useEffect } from 'react';\nimport Filter from 'components/Filter/Filter';\nimport { Text } from './FavoritesPage.styled';\nimport { SortButton } from 'pages/CatalogPage/CatalogPage.styled';\nimport { ReactComponent as DescendingIcon } from '../../images/icons/sort-amount-desc.svg';\nimport { ReactComponent as AscendingIcon } from '../../images/icons/sort-amount-asc.svg';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst FavoritesPage = () => {\n  const favoriteCars = useSelector(state => state.favorites);\n\n  const [makes, setMakes] = useState([]);\n\n  useEffect(() => {\n    const uniqueMakes = [...new Set(favoriteCars.map(car => car.make))];\n    setMakes(uniqueMakes);\n    setFilteredCars(favoriteCars);\n  }, [favoriteCars]);\n\n  const [filteredCars, setFilteredCars] = useState(favoriteCars);\n  const [applyFiltersFlag, setApplyFiltersFlag] = useState(false);\n  const [showNoCarsMessage, setShowNoCarsMessage] = useState(false);\n\n  const [makeFilter, setMakeFilter] = useState('');\n  const [priceFilter, setPriceFilter] = useState('');\n  const [mileageFilter, setMileageFilter] = useState({\n    min: '',\n    max: '',\n  });\n\n  const [sortOrder, setSortOrder] = useState('ascending');\n\n  const filterCars = useCallback(\n    car => {\n      if (makeFilter !== '' && car.make !== makeFilter) {\n        return false;\n      }\n\n      const rentalPriceNumeric = parseInt(\n        car.rentalPrice.replace(/\\D/g, ''),\n        10\n      );\n\n      if (\n        priceFilter !== '' &&\n        rentalPriceNumeric >= parseInt(priceFilter, 10)\n      ) {\n        return false;\n      }\n\n      if (\n        (mileageFilter.min !== '' && car.mileage < mileageFilter.min) ||\n        (mileageFilter.max !== '' && car.mileage > mileageFilter.max)\n      ) {\n        return false;\n      }\n\n      return true;\n    },\n    [makeFilter, priceFilter, mileageFilter]\n  );\n\n  useEffect(() => {\n    if (applyFiltersFlag) {\n      const filteredCars = favoriteCars.filter(filterCars);\n      setFilteredCars(filteredCars);\n      if (filteredCars.length === 0) {\n        setShowNoCarsMessage(true);\n        toast.error('No cars match your criteria. Please adjust your filters.');\n      } else {\n        setShowNoCarsMessage(false);\n      }\n      setApplyFiltersFlag(false);\n    }\n  }, [applyFiltersFlag, favoriteCars, filterCars]);\n\n  const sortedCars = [...filteredCars].sort((a, b) => {\n    if (sortOrder === 'ascending') {\n      return (\n        parseInt(a.rentalPrice.replace(/\\D/g, ''), 10) -\n        parseInt(b.rentalPrice.replace(/\\D/g, ''), 10)\n      );\n    } else {\n      return (\n        parseInt(b.rentalPrice.replace(/\\D/g, ''), 10) -\n        parseInt(a.rentalPrice.replace(/\\D/g, ''), 10)\n      );\n    }\n  });\n\n  const handleReset = () => {\n    setMakeFilter('');\n    setPriceFilter('');\n    setMileageFilter({ min: '', max: '' });\n    setApplyFiltersFlag(true);\n    setFilteredCars(favoriteCars);\n    setShowNoCarsMessage(false);\n  };\n\n  const toggleSortOrder = () => {\n    setSortOrder(prevSortOrder =>\n      prevSortOrder === 'ascending' ? 'descending' : 'ascending'\n    );\n  };\n\n  return (\n    <section>\n      <Container>\n        <Toaster />\n        <Filter\n          makeFilter={makeFilter}\n          priceFilter={priceFilter}\n          mileageFilter={mileageFilter}\n          setMakeFilter={setMakeFilter}\n          setPriceFilter={setPriceFilter}\n          setMileageFilter={setMileageFilter}\n          makes={makes}\n          handleReset={handleReset}\n          onApplyFilters={() => {\n            setApplyFiltersFlag(true);\n          }}\n        >\n          <SortButton\n            type=\"button\"\n            aria-label=\"sorting-button\"\n            onClick={toggleSortOrder}\n          >\n            {sortOrder === 'ascending' ? <DescendingIcon /> : <AscendingIcon />}\n          </SortButton>\n        </Filter>\n\n        {sortedCars.length > 0 && !showNoCarsMessage ? (\n          <CarsList>\n            {sortedCars.map(car => (\n              <li key={car.id}>{<CarCard car={car} />}</li>\n            ))}\n          </CarsList>\n        ) : (\n          <Text>There is no favorite cars yet</Text>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["favoriteCars","useSelector","state","favorites","_useState","useState","_useState2","_slicedToArray","makes","setMakes","useEffect","uniqueMakes","_toConsumableArray","Set","map","car","make","setFilteredCars","_useState3","_useState4","filteredCars","_useState5","_useState6","applyFiltersFlag","setApplyFiltersFlag","_useState7","_useState8","showNoCarsMessage","setShowNoCarsMessage","_useState9","_useState10","makeFilter","setMakeFilter","_useState11","_useState12","priceFilter","setPriceFilter","_useState13","min","max","_useState14","mileageFilter","setMileageFilter","_useState15","_useState16","sortOrder","setSortOrder","filterCars","useCallback","rentalPriceNumeric","parseInt","rentalPrice","replace","mileage","filter","length","toast","error","sortedCars","sort","a","b","_jsx","children","_jsxs","Container","Toaster","Filter","handleReset","onApplyFilters","SortButton","type","onClick","prevSortOrder","DescendingIcon","AscendingIcon","CarsList","CarCard","id","Text"],"sourceRoot":""}